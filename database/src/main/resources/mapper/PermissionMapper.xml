<?xml version="1.0" encoding="UTF-8" ?>
		<!DOCTYPE mapper
				PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
				"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Permission">

	<resultMap id="RM_Permission" type="com.es.ssp.model.Permission">
        <result property="permissionId" column="permissionId"/>
        <result property="identification" column="identification"/>
        <result property="name" column="name"/>
	<association property="rolePermissions" column="permissionId" fetchType="lazy"
				 select="RolePermission.findByPermissionId" />
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="Permission.columns">
	    <![CDATA[
		permissionId,identification,name
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="Permission.insert" useGeneratedKeys="true" keyProperty="permissionId">
    <![CDATA[
        INSERT INTO u_permission (
         permissionId, identification, name
        ) VALUES (
         #{permissionId}, #{identification}, #{name}        
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="Permission.update" >
    <![CDATA[
        UPDATE u_permission SET
	        identification = #{identification} , name = #{name}  
        WHERE 
        	permissionId = #{permissionId}  	        
    ]]>
	</update>

    <delete id="Permission.delete">
    <![CDATA[
        DELETE FROM u_permission WHERE
        permissionId = #{id} 
    ]]>
    </delete>
    
    <select id="Permission.getById" resultMap="RM_Permission">
		SELECT <include refid="Permission.columns" />
	    <![CDATA[
		    FROM u_permission 
	        WHERE 
		        permissionId = #{id} 
	    ]]>
	</select>
	
	<sql id="Permission.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(permissionId)">
				AND permissionId = #{permissionId}
			</if>
	       <if test="@Ognl@isNotEmpty(identification)">
				AND identification = #{identification}
			</if>
	       <if test="@Ognl@isNotEmpty(name)">
				AND name = #{name}
			</if>
		</where>
	</sql>
		
    <select id="Permission.findPage.count" resultType="long">
        SELECT count(*) FROM u_permission 
		<include refid="Permission.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Permission.findPage" resultMap="RM_Permission">
    	SELECT <include refid="Permission.columns" />
	    FROM u_permission 
		<include refid="Permission.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
		LIMIT #{offset},#{limit}
    </select>



    <select id="Permission.findAll" resultMap="RM_Permission">
	    SELECT <include refid="Permission.columns" />
		FROM u_permission
		<include refid="Permission.findPage.where"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
		<if test="@Ognl@isNotEmpty(limit)">
			LIMIT #{limit}
		</if>
	</select>
</mapper>

