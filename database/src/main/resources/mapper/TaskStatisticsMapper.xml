<?xml version="1.0" encoding="UTF-8" ?>
		<!DOCTYPE mapper
				PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
				"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="TaskStatistics">

	<resultMap id="RM_TaskStatistics" type="com.es.ssp.model.TaskStatistics">
        <result property="recordId" column="recordId"/>
        <result property="month1" column="month1"/>
        <result property="month2" column="month2"/>
        <result property="month3" column="month3"/>
        <result property="month4" column="month4"/>
        <result property="month5" column="month5"/>
        <result property="month6" column="month6"/>
        <result property="month7" column="month7"/>
        <result property="month8" column="month8"/>
        <result property="month9" column="month9"/>
        <result property="month10" column="month10"/>
        <result property="month11" column="month11"/>
        <result property="month12" column="month12"/>
        <result property="totalNum" column="totalNum"/>
        <result property="totalRate" column="totalRate"/>
        <result property="year" column="year"/>
        <result property="taskId" column="taskId"/>
	<association property="reportTask" column="taskId" fetchType="lazy"
			 select="ReportTask.getById" />
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="TaskStatistics.columns">
	    <![CDATA[
		t.recordId,month1,month2,month3,month4,month5,month6,month7,month8,month9,month10,month11,month12,totalNum,totalRate,`year`,t.taskId
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="TaskStatistics.insert" useGeneratedKeys="true" keyProperty="recordId">
    <![CDATA[
        INSERT INTO task_statistics (
         recordId, month1, month2, month3, month4, month5, month6, month7, month8, month9, month10, month11, month12, totalNum, totalRate, `year`, taskId
        ) VALUES (
         #{recordId}, #{month1}, #{month2}, #{month3}, #{month4}, #{month5}, #{month6}, #{month7}, #{month8}, #{month9}, #{month10}, #{month11}, #{month12}, #{totalNum}, #{totalRate}, #{year}, #{taskId}        
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="TaskStatistics.update" >
    <![CDATA[
        UPDATE task_statistics SET
	        month1 = #{month1} , month2 = #{month2} , month3 = #{month3} , month4 = #{month4} , month5 = #{month5} , month6 = #{month6} , month7 = #{month7} , month8 = #{month8} , month9 = #{month9} , month10 = #{month10} , month11 = #{month11} , month12 = #{month12} , totalNum = #{totalNum} , totalRate = #{totalRate} , year = #{year} , taskId = #{taskId}  
        WHERE 
        	recordId = #{recordId}  	        
    ]]>
	</update>

    <delete id="TaskStatistics.delete">
    <![CDATA[
        DELETE FROM task_statistics WHERE
        recordId = #{id} 
    ]]>
    </delete>
    
    <select id="TaskStatistics.getById" resultMap="RM_TaskStatistics">
		SELECT <include refid="TaskStatistics.columns" />
	    <![CDATA[
		    FROM task_statistics 
	        WHERE 
		        recordId = #{id} 
	    ]]>
	</select>
	
	<sql id="TaskStatistics.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(recordId)">
				AND t.recordId = #{recordId}
			</if>
			<if test="@Ognl@isNotEmpty(realName)">
				AND t1.realName LIKE CONCAT('%',#{realName},'%')
			</if>
			<if test="@Ognl@isNotEmpty(mobile)">
				AND t1.mobile LIKE CONCAT('%',#{mobile},'%')
			</if>
			<if test="@Ognl@isNotEmpty(workUnit)">
				AND t1.workUnit LIKE CONCAT('%',#{workUnit},'%')
			</if>
			<if test="@Ognl@isNotEmpty(town)">
				AND t1.town = #{town}
			</if>
			<if test="@Ognl@isNotEmpty(community)">
				AND t1.community = #{community}
			</if>
			<if test="@Ognl@isNotEmpty(taskNum)">
				AND t1.taskNum = #{taskNum}
			</if>
	       <if test="@Ognl@isNotEmpty(year)">
				AND `year` = #{year}
			</if>
	       <if test="@Ognl@isNotEmpty(taskId)">
				AND t.taskId = #{taskId}
			</if>
		</where>
	</sql>
		
    <select id="TaskStatistics.findPage.count" resultType="long">
        SELECT count(*) FROM task_statistics t JOIN report_task t1
		ON t1.taskId=t.taskId
		<include refid="TaskStatistics.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="TaskStatistics.findPage" resultMap="RM_TaskStatistics">
    	SELECT <include refid="TaskStatistics.columns" />
	    FROM task_statistics t JOIN report_task t1
		ON t1.taskId=t.taskId
		<include refid="TaskStatistics.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
		LIMIT #{offset},#{limit}
    </select>


    <select id="TaskStatistics.findByTaskId" resultMap="RM_TaskStatistics">
        SELECT <include refid="TaskStatistics.columns" />
        FROM task_statistics
        WHERE taskId=#{id}
    </select>


    <select id="TaskStatistics.findAll" resultMap="RM_TaskStatistics">
	    SELECT <include refid="TaskStatistics.columns" />
		FROM task_statistics t JOIN report_task t1
		ON t1.taskId=t.taskId
		<include refid="TaskStatistics.findPage.where"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
		<if test="@Ognl@isNotEmpty(limit)">
			LIMIT #{limit}
		</if>
	</select>
	<select id="TaskStatistics.townTaskCount" resultType="Map">
		SELECT
	SUM(month1) AS month1,
	SUM(month2) AS month2,
	SUM(month3) AS month3,
	SUM(month4) AS month4,
	SUM(month5) AS month5,
	SUM(month6) AS month6,
	SUM(month7) AS month7,
	SUM(month8) AS month8,
	SUM(month9) AS month9,
	SUM(month10) AS month10,
	SUM(month11) AS month11,
	SUM(month12) AS month12,
    SUM(totalNum) as totalNum,
	COUNT(*) AS totalVolunteer,
	SUM(taskNum) AS taskNum
FROM
	task_statistics t1
JOIN report_task t2 ON t1.taskId = t2.taskId
WHERE
	t2.town = #{town}
AND `year` = #{year}
	</select>
</mapper>

